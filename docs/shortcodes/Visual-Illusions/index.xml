<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Match-bands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Match-bands/</guid><description>Match bands # Terrain with Perlin Noise # Exercise Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial. ¿Por qué tiene la forma de un terreno montañoso? # Esto se debe al algortimo usado en la producción, el algoritmo de Perlin Noise. Es un tipo de ruido de gradiente desarrollado por Ken Perlin en 1983. Tiene muchos usos, incluidos, entre otros, generar terreno de forma procesal, aplicar variaciones pseudoaleatorias a las variables y ayudar en la creación de texturas de imágenes.</description></item><item><title/><link>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Spatial-Coherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Spatial-Coherence/</guid><description>Spatial Coherence # Instrucciones # Presionar la tecla &amp;lsquo;ESPACIO&amp;rsquo; para cambiar los modos. Activar la &amp;lsquo;Camara&amp;rsquo; del computador para visualizar el efecto. Color AVG # &amp;ldquo;Color avg&amp;rdquo; es una abreviatura de &amp;ldquo;color average&amp;rdquo; o &amp;ldquo;color promedio&amp;rdquo; en español. En el contexto de un pixelator, se refiere al color resultante de la combinación de varios píxeles vecinos de una imagen para crear un nuevo píxel más grande.
Por ejemplo, si un pixelator de 10x10 está siendo utilizado en una imagen, entonces cada píxel en la imagen se agrupará con sus vecinos más cercanos en un área de 10x10 píxeles, y se tomará el promedio de los valores de rojo, verde y azul de esos píxeles para crear el nuevo píxel.</description></item><item><title/><link>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Masking/</guid><description>Visual masking # Introducción # El enmascaramiento visual, también conocido como visual masking, es un fenómeno que afecta a la percepción visual. Se produce cuando la visibilidad de una imagen objetivo se ve disminuida por la presencia de otra imagen, que se llama máscara. En estas situaciones, el objetivo puede resultar invisible o apreciarse con menos contraste o nitidez.
Un caso particular son los patrones de moiré, estos son patrones de interferencia a gran escala que se producen cuando un patrón regular, parcialmente opaco con espacios transparentes, se superpone a otro patrón similar.</description></item><item><title/><link>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023i.github.io/showcase/docs/shortcodes/Visual-Illusions/Coloring/</guid><description>weight: 2 # Coloring # Color Mapping # Exercise Implement a color mapping application that helps people who are color blind see the colors around them. El programa recibe una imagen como argumento y realiza una transformación en sus píxeles para mejorar su visualización para personas con distintos tipos de daltonismo. Para ello, la función recorre todos los píxeles de la imagen y para cada uno de ellos, obtiene los valores de rojo, verde y azul (RGB) y calcula nuevos valores para estos componentes.</description></item></channel></rss>